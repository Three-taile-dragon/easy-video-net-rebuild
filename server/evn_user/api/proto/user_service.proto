//grpc 登陆服务配置文件

syntax = "proto3";
package user.service.v1;
option go_package = "evn_user/pkg/service/user.service.v1";


message CaptchaRequest {
  string email = 1;
}
message CommonDataResponse{
  string data = 1;
}

message CommonIDRequest {
  uint32 ID = 1;
}

message CommonBoolResponse {
  bool data = 1;
}

message RegisterRequest {
  string email = 1;
  string name = 2;
  string password =3;
  string mobile = 4;
  string captcha = 5;
}
message UserInfoResponse {
  int64 id = 1;
  string username = 2;
  string photo = 3;
  string token = 4;
  string created_at = 5;
}

message TokenVerifyResponse {
  int64 id = 1;
  string username = 2;
}

message LoginRequest {
  string username = 1;
  string password = 2;
}

message ForgetRequest {
  string email = 1;
  string password =2;
  string mobile = 3;
  string captcha = 4;
}


message TokenResponse{
  string accessToken = 1;
  string refreshToken = 2;
  string tokenType = 3;
  int64 accessTokenExp = 4;
}

message TokenRequest {
  string token = 1;
  string secret = 2;
  bool is_encrypt = 3;
}

message RefreshTokenRequest {
  string refreshToken = 1;
}

message SpaceIndividualRequest {
  uint32 ID = 1;
  uint32 uid = 2;
}

message UserInfoRequest {
  string Username = 1;
  int64  Gender = 2;
  string Birth_Date = 3;
  bool Is_Visible = 4;
  string Signature = 5;
  int64 ID = 6;
}

message DetermineNameExistsRequest {
  string Username = 1;
  int64 ID = 2;
}

service UserService {
  rpc GetCaptcha(CaptchaRequest) returns (CommonDataResponse) {}
  rpc Register(RegisterRequest) returns (UserInfoResponse) {}
  rpc Login(LoginRequest) returns (UserInfoResponse) {}
  rpc Forget(ForgetRequest) returns (CommonDataResponse) {}
  rpc TokenVerify(TokenRequest) returns (TokenVerifyResponse){}
  rpc RefreshToken(RefreshTokenRequest) returns (TokenResponse) {}
  rpc GetSpaceIndividual(SpaceIndividualRequest) returns (CommonDataResponse) {}
  rpc GetReleaseInformation(CommonIDRequest) returns (CommonDataResponse) {}
  rpc GetAttentionList(CommonIDRequest) returns (CommonDataResponse) {}
  rpc GetVermicelliList(CommonIDRequest) returns (CommonDataResponse) {}
  rpc GetUserInfo(CommonIDRequest) returns (CommonDataResponse) {}
  rpc SetUserInfo(UserInfoRequest) returns (CommonBoolResponse) {}
  rpc DetermineNameExists(DetermineNameExistsRequest) returns (CommonBoolResponse) {}
}