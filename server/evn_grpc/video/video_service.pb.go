//grpc 登陆服务配置文件

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: video_service.proto

package video

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CommonDataResponse) Reset() {
	*x = CommonDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonDataResponse) ProtoMessage() {}

func (x *CommonDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonDataResponse.ProtoReflect.Descriptor instead.
func (*CommonDataResponse) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{0}
}

func (x *CommonDataResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CommonIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *CommonIDRequest) Reset() {
	*x = CommonIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonIDRequest) ProtoMessage() {}

func (x *CommonIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonIDRequest.ProtoReflect.Descriptor instead.
func (*CommonIDRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{1}
}

func (x *CommonIDRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type CommonIDAndUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID  uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UID uint32 `protobuf:"varint,2,opt,name=UID,proto3" json:"UID,omitempty"`
}

func (x *CommonIDAndUIDRequest) Reset() {
	*x = CommonIDAndUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonIDAndUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonIDAndUIDRequest) ProtoMessage() {}

func (x *CommonIDAndUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonIDAndUIDRequest.ProtoReflect.Descriptor instead.
func (*CommonIDAndUIDRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{2}
}

func (x *CommonIDAndUIDRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CommonIDAndUIDRequest) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

type CommonPageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int32  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Size    int32  `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	Keyword string `protobuf:"bytes,3,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
}

func (x *CommonPageInfo) Reset() {
	*x = CommonPageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonPageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonPageInfo) ProtoMessage() {}

func (x *CommonPageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonPageInfo.ProtoReflect.Descriptor instead.
func (*CommonPageInfo) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{3}
}

func (x *CommonPageInfo) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CommonPageInfo) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CommonPageInfo) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type GetVideoCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *CommonPageInfo `protobuf:"bytes,1,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
	VideoID  uint32          `protobuf:"varint,2,opt,name=VideoID,proto3" json:"VideoID,omitempty"`
}

func (x *GetVideoCommentRequest) Reset() {
	*x = GetVideoCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoCommentRequest) ProtoMessage() {}

func (x *GetVideoCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoCommentRequest.ProtoReflect.Descriptor instead.
func (*GetVideoCommentRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{4}
}

func (x *GetVideoCommentRequest) GetPageInfo() *CommonPageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *GetVideoCommentRequest) GetVideoID() uint32 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

type GetVideoContributionByIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoID uint32 `protobuf:"varint,1,opt,name=VideoID,proto3" json:"VideoID,omitempty"`
	Uid     uint32 `protobuf:"varint,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *GetVideoContributionByIDRequest) Reset() {
	*x = GetVideoContributionByIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoContributionByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoContributionByIDRequest) ProtoMessage() {}

func (x *GetVideoContributionByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoContributionByIDRequest.ProtoReflect.Descriptor instead.
func (*GetVideoContributionByIDRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetVideoContributionByIDRequest) GetVideoID() uint32 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

func (x *GetVideoContributionByIDRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type SendVideoBarrageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Author string  `protobuf:"bytes,1,opt,name=Author,proto3" json:"Author,omitempty"`
	Color  uint32  `protobuf:"varint,2,opt,name=Color,proto3" json:"Color,omitempty"`
	ID     string  `protobuf:"bytes,3,opt,name=ID,proto3" json:"ID,omitempty"`
	Text   string  `protobuf:"bytes,4,opt,name=Text,proto3" json:"Text,omitempty"`
	Time   float32 `protobuf:"fixed32,5,opt,name=Time,proto3" json:"Time,omitempty"`
	Type   uint32  `protobuf:"varint,6,opt,name=Type,proto3" json:"Type,omitempty"`
	Uid    uint32  `protobuf:"varint,7,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *SendVideoBarrageRequest) Reset() {
	*x = SendVideoBarrageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendVideoBarrageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendVideoBarrageRequest) ProtoMessage() {}

func (x *SendVideoBarrageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendVideoBarrageRequest.ProtoReflect.Descriptor instead.
func (*SendVideoBarrageRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{6}
}

func (x *SendVideoBarrageRequest) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *SendVideoBarrageRequest) GetColor() uint32 {
	if x != nil {
		return x.Color
	}
	return 0
}

func (x *SendVideoBarrageRequest) GetID() string {
	if x != nil {
		return x.ID
	}
	return ""
}

func (x *SendVideoBarrageRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SendVideoBarrageRequest) GetTime() float32 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *SendVideoBarrageRequest) GetType() uint32 {
	if x != nil {
		return x.Type
	}
	return 0
}

func (x *SendVideoBarrageRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type CreateVideoContributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Video           string   `protobuf:"bytes,1,opt,name=Video,proto3" json:"Video,omitempty"`
	VideoUploadType string   `protobuf:"bytes,2,opt,name=VideoUploadType,proto3" json:"VideoUploadType,omitempty"`
	Cover           string   `protobuf:"bytes,3,opt,name=Cover,proto3" json:"Cover,omitempty"`
	CoverUploadType string   `protobuf:"bytes,4,opt,name=CoverUploadType,proto3" json:"CoverUploadType,omitempty"`
	Title           string   `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	Reprinted       bool     `protobuf:"varint,6,opt,name=Reprinted,proto3" json:"Reprinted,omitempty"`
	Label           []string `protobuf:"bytes,7,rep,name=Label,proto3" json:"Label,omitempty"`
	Introduce       string   `protobuf:"bytes,8,opt,name=Introduce,proto3" json:"Introduce,omitempty"`
	VideoDuration   int64    `protobuf:"varint,9,opt,name=VideoDuration,proto3" json:"VideoDuration,omitempty"`
	Media           string   `protobuf:"bytes,10,opt,name=Media,proto3" json:"Media,omitempty"`
	Uid             uint32   `protobuf:"varint,11,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *CreateVideoContributionRequest) Reset() {
	*x = CreateVideoContributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateVideoContributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateVideoContributionRequest) ProtoMessage() {}

func (x *CreateVideoContributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateVideoContributionRequest.ProtoReflect.Descriptor instead.
func (*CreateVideoContributionRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{7}
}

func (x *CreateVideoContributionRequest) GetVideo() string {
	if x != nil {
		return x.Video
	}
	return ""
}

func (x *CreateVideoContributionRequest) GetVideoUploadType() string {
	if x != nil {
		return x.VideoUploadType
	}
	return ""
}

func (x *CreateVideoContributionRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CreateVideoContributionRequest) GetCoverUploadType() string {
	if x != nil {
		return x.CoverUploadType
	}
	return ""
}

func (x *CreateVideoContributionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateVideoContributionRequest) GetReprinted() bool {
	if x != nil {
		return x.Reprinted
	}
	return false
}

func (x *CreateVideoContributionRequest) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *CreateVideoContributionRequest) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *CreateVideoContributionRequest) GetVideoDuration() int64 {
	if x != nil {
		return x.VideoDuration
	}
	return 0
}

func (x *CreateVideoContributionRequest) GetMedia() string {
	if x != nil {
		return x.Media
	}
	return ""
}

func (x *CreateVideoContributionRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UpdateVideoContributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID              uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Cover           string   `protobuf:"bytes,2,opt,name=Cover,proto3" json:"Cover,omitempty"`
	CoverUploadType string   `protobuf:"bytes,3,opt,name=CoverUploadType,proto3" json:"CoverUploadType,omitempty"`
	Title           string   `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Reprinted       bool     `protobuf:"varint,5,opt,name=Reprinted,proto3" json:"Reprinted,omitempty"`
	Label           []string `protobuf:"bytes,6,rep,name=Label,proto3" json:"Label,omitempty"`
	Introduce       string   `protobuf:"bytes,7,opt,name=Introduce,proto3" json:"Introduce,omitempty"`
	Uid             uint32   `protobuf:"varint,8,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *UpdateVideoContributionRequest) Reset() {
	*x = UpdateVideoContributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateVideoContributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVideoContributionRequest) ProtoMessage() {}

func (x *UpdateVideoContributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVideoContributionRequest.ProtoReflect.Descriptor instead.
func (*UpdateVideoContributionRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{8}
}

func (x *UpdateVideoContributionRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateVideoContributionRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UpdateVideoContributionRequest) GetCoverUploadType() string {
	if x != nil {
		return x.CoverUploadType
	}
	return ""
}

func (x *UpdateVideoContributionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateVideoContributionRequest) GetReprinted() bool {
	if x != nil {
		return x.Reprinted
	}
	return false
}

func (x *UpdateVideoContributionRequest) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *UpdateVideoContributionRequest) GetIntroduce() string {
	if x != nil {
		return x.Introduce
	}
	return ""
}

func (x *UpdateVideoContributionRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type VideoPostCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VideoID   uint32 `protobuf:"varint,1,opt,name=VideoID,proto3" json:"VideoID,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	ContentID uint32 `protobuf:"varint,3,opt,name=ContentID,proto3" json:"ContentID,omitempty"`
	Uid       uint32 `protobuf:"varint,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *VideoPostCommentRequest) Reset() {
	*x = VideoPostCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoPostCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoPostCommentRequest) ProtoMessage() {}

func (x *VideoPostCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoPostCommentRequest.ProtoReflect.Descriptor instead.
func (*VideoPostCommentRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{9}
}

func (x *VideoPostCommentRequest) GetVideoID() uint32 {
	if x != nil {
		return x.VideoID
	}
	return 0
}

func (x *VideoPostCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *VideoPostCommentRequest) GetContentID() uint32 {
	if x != nil {
		return x.ContentID
	}
	return 0
}

func (x *VideoPostCommentRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetVideoManagementListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *CommonPageInfo `protobuf:"bytes,1,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
	Uid      uint32          `protobuf:"varint,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *GetVideoManagementListRequest) Reset() {
	*x = GetVideoManagementListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_video_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoManagementListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoManagementListRequest) ProtoMessage() {}

func (x *GetVideoManagementListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_video_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoManagementListRequest.ProtoReflect.Descriptor instead.
func (*GetVideoManagementListRequest) Descriptor() ([]byte, []int) {
	return file_video_service_proto_rawDescGZIP(), []int{10}
}

func (x *GetVideoManagementListRequest) GetPageInfo() *CommonPageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *GetVideoManagementListRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

var File_video_service_proto protoreflect.FileDescriptor

var file_video_service_proto_rawDesc = []byte{
	0x0a, 0x13, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x28, 0x0a, 0x12, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x22, 0x21, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x02, 0x49, 0x44, 0x22, 0x39, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44,
	0x41, 0x6e, 0x64, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a,
	0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x49, 0x44, 0x22,
	0x52, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x4b, 0x65, 0x79,
	0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x4b, 0x65, 0x79, 0x77,
	0x6f, 0x72, 0x64, 0x22, 0x70, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3c, 0x0a,
	0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x20, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a, 0x07, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x44, 0x22, 0x4d, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x55, 0x69, 0x64, 0x22, 0xa5, 0x01, 0x0a, 0x17, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x6c, 0x6f,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x49, 0x44, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x49, 0x44, 0x12, 0x12,
	0x0a, 0x04, 0x54, 0x65, 0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02,
	0x52, 0x04, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x69, 0x64, 0x22, 0xd6, 0x02, 0x0a,
	0x1e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x28, 0x0a, 0x0f, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x52, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74,
	0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x52, 0x65, 0x70, 0x72, 0x69, 0x6e,
	0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74,
	0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e,
	0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x4d, 0x65,
	0x64, 0x69, 0x61, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x55, 0x69, 0x64, 0x22, 0xea, 0x01, 0x0a, 0x1e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x28,
	0x0a, 0x0f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x70,
	0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c,
	0x0a, 0x09, 0x52, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x52, 0x65, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x61, 0x62,
	0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x49, 0x6e, 0x74, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x65,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x22, 0x7d, 0x0a, 0x17, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73, 0x74, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x69,
	0x64, 0x22, 0x6f, 0x0a, 0x1d, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x61, 0x6e,
	0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3c, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61,
	0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x32, 0x97, 0x09, 0x0a, 0x0c, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x5c, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42,
	0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x12, 0x21, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x12, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x72,
	0x72, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x21, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x63, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x28, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x75, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x42, 0x79, 0x49, 0x44, 0x12, 0x31, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x65, 0x0a, 0x10, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42, 0x61, 0x72, 0x72,
	0x61, 0x67, 0x65, 0x12, 0x29, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x42, 0x61, 0x72, 0x72, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24,
	0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x17, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x30, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x73, 0x0a, 0x17, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x62, 0x0a, 0x0f, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x42,
	0x79, 0x49, 0x44, 0x12, 0x27, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x41,
	0x6e, 0x64, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76,
	0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x65, 0x0a, 0x10, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x50, 0x6f, 0x73,
	0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x16, 0x47,
	0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e,
	0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x5c,
	0x0a, 0x09, 0x4c, 0x69, 0x6b, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x27, 0x2e, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x28, 0x5a, 0x26,
	0x65, 0x76, 0x6e, 0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_video_service_proto_rawDescOnce sync.Once
	file_video_service_proto_rawDescData = file_video_service_proto_rawDesc
)

func file_video_service_proto_rawDescGZIP() []byte {
	file_video_service_proto_rawDescOnce.Do(func() {
		file_video_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_video_service_proto_rawDescData)
	})
	return file_video_service_proto_rawDescData
}

var file_video_service_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_video_service_proto_goTypes = []interface{}{
	(*CommonDataResponse)(nil),              // 0: video.service.v1.CommonDataResponse
	(*CommonIDRequest)(nil),                 // 1: video.service.v1.CommonIDRequest
	(*CommonIDAndUIDRequest)(nil),           // 2: video.service.v1.CommonIDAndUIDRequest
	(*CommonPageInfo)(nil),                  // 3: video.service.v1.CommonPageInfo
	(*GetVideoCommentRequest)(nil),          // 4: video.service.v1.GetVideoCommentRequest
	(*GetVideoContributionByIDRequest)(nil), // 5: video.service.v1.GetVideoContributionByIDRequest
	(*SendVideoBarrageRequest)(nil),         // 6: video.service.v1.SendVideoBarrageRequest
	(*CreateVideoContributionRequest)(nil),  // 7: video.service.v1.CreateVideoContributionRequest
	(*UpdateVideoContributionRequest)(nil),  // 8: video.service.v1.UpdateVideoContributionRequest
	(*VideoPostCommentRequest)(nil),         // 9: video.service.v1.VideoPostCommentRequest
	(*GetVideoManagementListRequest)(nil),   // 10: video.service.v1.GetVideoManagementListRequest
}
var file_video_service_proto_depIdxs = []int32{
	3,  // 0: video.service.v1.GetVideoCommentRequest.PageInfo:type_name -> video.service.v1.CommonPageInfo
	3,  // 1: video.service.v1.GetVideoManagementListRequest.PageInfo:type_name -> video.service.v1.CommonPageInfo
	1,  // 2: video.service.v1.VideoService.GetVideoBarrage:input_type -> video.service.v1.CommonIDRequest
	1,  // 3: video.service.v1.VideoService.GetVideoBarrageList:input_type -> video.service.v1.CommonIDRequest
	4,  // 4: video.service.v1.VideoService.GetVideoComment:input_type -> video.service.v1.GetVideoCommentRequest
	5,  // 5: video.service.v1.VideoService.GetVideoContributionByID:input_type -> video.service.v1.GetVideoContributionByIDRequest
	6,  // 6: video.service.v1.VideoService.SendVideoBarrage:input_type -> video.service.v1.SendVideoBarrageRequest
	7,  // 7: video.service.v1.VideoService.CreateVideoContribution:input_type -> video.service.v1.CreateVideoContributionRequest
	8,  // 8: video.service.v1.VideoService.UpdateVideoContribution:input_type -> video.service.v1.UpdateVideoContributionRequest
	2,  // 9: video.service.v1.VideoService.DeleteVideoByID:input_type -> video.service.v1.CommonIDAndUIDRequest
	9,  // 10: video.service.v1.VideoService.VideoPostComment:input_type -> video.service.v1.VideoPostCommentRequest
	10, // 11: video.service.v1.VideoService.GetVideoManagementList:input_type -> video.service.v1.GetVideoManagementListRequest
	2,  // 12: video.service.v1.VideoService.LikeVideo:input_type -> video.service.v1.CommonIDAndUIDRequest
	0,  // 13: video.service.v1.VideoService.GetVideoBarrage:output_type -> video.service.v1.CommonDataResponse
	0,  // 14: video.service.v1.VideoService.GetVideoBarrageList:output_type -> video.service.v1.CommonDataResponse
	0,  // 15: video.service.v1.VideoService.GetVideoComment:output_type -> video.service.v1.CommonDataResponse
	0,  // 16: video.service.v1.VideoService.GetVideoContributionByID:output_type -> video.service.v1.CommonDataResponse
	0,  // 17: video.service.v1.VideoService.SendVideoBarrage:output_type -> video.service.v1.CommonDataResponse
	0,  // 18: video.service.v1.VideoService.CreateVideoContribution:output_type -> video.service.v1.CommonDataResponse
	0,  // 19: video.service.v1.VideoService.UpdateVideoContribution:output_type -> video.service.v1.CommonDataResponse
	0,  // 20: video.service.v1.VideoService.DeleteVideoByID:output_type -> video.service.v1.CommonDataResponse
	0,  // 21: video.service.v1.VideoService.VideoPostComment:output_type -> video.service.v1.CommonDataResponse
	0,  // 22: video.service.v1.VideoService.GetVideoManagementList:output_type -> video.service.v1.CommonDataResponse
	0,  // 23: video.service.v1.VideoService.LikeVideo:output_type -> video.service.v1.CommonDataResponse
	13, // [13:24] is the sub-list for method output_type
	2,  // [2:13] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_video_service_proto_init() }
func file_video_service_proto_init() {
	if File_video_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_video_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonIDAndUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonPageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoContributionByIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendVideoBarrageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateVideoContributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateVideoContributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoPostCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_video_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoManagementListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_video_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_video_service_proto_goTypes,
		DependencyIndexes: file_video_service_proto_depIdxs,
		MessageInfos:      file_video_service_proto_msgTypes,
	}.Build()
	File_video_service_proto = out.File
	file_video_service_proto_rawDesc = nil
	file_video_service_proto_goTypes = nil
	file_video_service_proto_depIdxs = nil
}
