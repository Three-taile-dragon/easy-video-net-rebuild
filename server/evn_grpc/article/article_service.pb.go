//grpc 登陆服务配置文件

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v4.23.4
// source: article_service.proto

package article

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CommonDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data string `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CommonDataResponse) Reset() {
	*x = CommonDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonDataResponse) ProtoMessage() {}

func (x *CommonDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonDataResponse.ProtoReflect.Descriptor instead.
func (*CommonDataResponse) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{0}
}

func (x *CommonDataResponse) GetData() string {
	if x != nil {
		return x.Data
	}
	return ""
}

type CommonIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
}

func (x *CommonIDRequest) Reset() {
	*x = CommonIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonIDRequest) ProtoMessage() {}

func (x *CommonIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonIDRequest.ProtoReflect.Descriptor instead.
func (*CommonIDRequest) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{1}
}

func (x *CommonIDRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

type CommonIDAndUIDRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID  uint32 `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	UID uint32 `protobuf:"varint,2,opt,name=UID,proto3" json:"UID,omitempty"`
}

func (x *CommonIDAndUIDRequest) Reset() {
	*x = CommonIDAndUIDRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonIDAndUIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonIDAndUIDRequest) ProtoMessage() {}

func (x *CommonIDAndUIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonIDAndUIDRequest.ProtoReflect.Descriptor instead.
func (*CommonIDAndUIDRequest) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{2}
}

func (x *CommonIDAndUIDRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *CommonIDAndUIDRequest) GetUID() uint32 {
	if x != nil {
		return x.UID
	}
	return 0
}

type CommonPageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Page    int32  `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Size    int32  `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
	Keyword string `protobuf:"bytes,3,opt,name=Keyword,proto3" json:"Keyword,omitempty"`
}

func (x *CommonPageInfo) Reset() {
	*x = CommonPageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonPageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonPageInfo) ProtoMessage() {}

func (x *CommonPageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonPageInfo.ProtoReflect.Descriptor instead.
func (*CommonPageInfo) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{3}
}

func (x *CommonPageInfo) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *CommonPageInfo) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *CommonPageInfo) GetKeyword() string {
	if x != nil {
		return x.Keyword
	}
	return ""
}

type CommonZeroRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CommonZeroRequest) Reset() {
	*x = CommonZeroRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonZeroRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonZeroRequest) ProtoMessage() {}

func (x *CommonZeroRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonZeroRequest.ProtoReflect.Descriptor instead.
func (*CommonZeroRequest) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{4}
}

type GetArticleCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo  *CommonPageInfo `protobuf:"bytes,1,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
	ArticleID uint32          `protobuf:"varint,2,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
}

func (x *GetArticleCommentRequest) Reset() {
	*x = GetArticleCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleCommentRequest) ProtoMessage() {}

func (x *GetArticleCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleCommentRequest.ProtoReflect.Descriptor instead.
func (*GetArticleCommentRequest) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{5}
}

func (x *GetArticleCommentRequest) GetPageInfo() *CommonPageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *GetArticleCommentRequest) GetArticleID() uint32 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

type CreateArticleContributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cover                         string   `protobuf:"bytes,1,opt,name=Cover,proto3" json:"Cover,omitempty"`
	CoverUploadType               string   `protobuf:"bytes,2,opt,name=CoverUploadType,proto3" json:"CoverUploadType,omitempty"`
	ArticleContributionUploadType string   `protobuf:"bytes,3,opt,name=ArticleContributionUploadType,proto3" json:"ArticleContributionUploadType,omitempty"`
	Title                         string   `protobuf:"bytes,4,opt,name=Title,proto3" json:"Title,omitempty"`
	Label                         []string `protobuf:"bytes,5,rep,name=Label,proto3" json:"Label,omitempty"`
	Content                       string   `protobuf:"bytes,6,opt,name=Content,proto3" json:"Content,omitempty"`
	Comments                      bool     `protobuf:"varint,7,opt,name=Comments,proto3" json:"Comments,omitempty"`
	ClassificationID              uint32   `protobuf:"varint,8,opt,name=ClassificationID,proto3" json:"ClassificationID,omitempty"`
	Uid                           uint32   `protobuf:"varint,9,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *CreateArticleContributionRequest) Reset() {
	*x = CreateArticleContributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateArticleContributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateArticleContributionRequest) ProtoMessage() {}

func (x *CreateArticleContributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateArticleContributionRequest.ProtoReflect.Descriptor instead.
func (*CreateArticleContributionRequest) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{6}
}

func (x *CreateArticleContributionRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *CreateArticleContributionRequest) GetCoverUploadType() string {
	if x != nil {
		return x.CoverUploadType
	}
	return ""
}

func (x *CreateArticleContributionRequest) GetArticleContributionUploadType() string {
	if x != nil {
		return x.ArticleContributionUploadType
	}
	return ""
}

func (x *CreateArticleContributionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateArticleContributionRequest) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *CreateArticleContributionRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreateArticleContributionRequest) GetComments() bool {
	if x != nil {
		return x.Comments
	}
	return false
}

func (x *CreateArticleContributionRequest) GetClassificationID() uint32 {
	if x != nil {
		return x.ClassificationID
	}
	return 0
}

func (x *CreateArticleContributionRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type UpdateArticleContributionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ID                            uint32   `protobuf:"varint,1,opt,name=ID,proto3" json:"ID,omitempty"`
	Cover                         string   `protobuf:"bytes,2,opt,name=Cover,proto3" json:"Cover,omitempty"`
	CoverUploadType               string   `protobuf:"bytes,3,opt,name=CoverUploadType,proto3" json:"CoverUploadType,omitempty"`
	ArticleContributionUploadType string   `protobuf:"bytes,4,opt,name=ArticleContributionUploadType,proto3" json:"ArticleContributionUploadType,omitempty"`
	Title                         string   `protobuf:"bytes,5,opt,name=Title,proto3" json:"Title,omitempty"`
	Label                         []string `protobuf:"bytes,6,rep,name=Label,proto3" json:"Label,omitempty"`
	Content                       string   `protobuf:"bytes,7,opt,name=Content,proto3" json:"Content,omitempty"`
	Comments                      bool     `protobuf:"varint,8,opt,name=Comments,proto3" json:"Comments,omitempty"`
	ClassificationID              uint32   `protobuf:"varint,9,opt,name=ClassificationID,proto3" json:"ClassificationID,omitempty"`
	Uid                           uint32   `protobuf:"varint,10,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *UpdateArticleContributionRequest) Reset() {
	*x = UpdateArticleContributionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateArticleContributionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateArticleContributionRequest) ProtoMessage() {}

func (x *UpdateArticleContributionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateArticleContributionRequest.ProtoReflect.Descriptor instead.
func (*UpdateArticleContributionRequest) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{7}
}

func (x *UpdateArticleContributionRequest) GetID() uint32 {
	if x != nil {
		return x.ID
	}
	return 0
}

func (x *UpdateArticleContributionRequest) GetCover() string {
	if x != nil {
		return x.Cover
	}
	return ""
}

func (x *UpdateArticleContributionRequest) GetCoverUploadType() string {
	if x != nil {
		return x.CoverUploadType
	}
	return ""
}

func (x *UpdateArticleContributionRequest) GetArticleContributionUploadType() string {
	if x != nil {
		return x.ArticleContributionUploadType
	}
	return ""
}

func (x *UpdateArticleContributionRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateArticleContributionRequest) GetLabel() []string {
	if x != nil {
		return x.Label
	}
	return nil
}

func (x *UpdateArticleContributionRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *UpdateArticleContributionRequest) GetComments() bool {
	if x != nil {
		return x.Comments
	}
	return false
}

func (x *UpdateArticleContributionRequest) GetClassificationID() uint32 {
	if x != nil {
		return x.ClassificationID
	}
	return 0
}

func (x *UpdateArticleContributionRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type ArticlePostCommentRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ArticleID uint32 `protobuf:"varint,1,opt,name=ArticleID,proto3" json:"ArticleID,omitempty"`
	Content   string `protobuf:"bytes,2,opt,name=Content,proto3" json:"Content,omitempty"`
	ContentID uint32 `protobuf:"varint,3,opt,name=ContentID,proto3" json:"ContentID,omitempty"`
	Uid       uint32 `protobuf:"varint,4,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *ArticlePostCommentRequest) Reset() {
	*x = ArticlePostCommentRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ArticlePostCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArticlePostCommentRequest) ProtoMessage() {}

func (x *ArticlePostCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArticlePostCommentRequest.ProtoReflect.Descriptor instead.
func (*ArticlePostCommentRequest) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{8}
}

func (x *ArticlePostCommentRequest) GetArticleID() uint32 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

func (x *ArticlePostCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ArticlePostCommentRequest) GetContentID() uint32 {
	if x != nil {
		return x.ContentID
	}
	return 0
}

func (x *ArticlePostCommentRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

type GetArticleManagementListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageInfo *CommonPageInfo `protobuf:"bytes,1,opt,name=PageInfo,proto3" json:"PageInfo,omitempty"`
	Uid      uint32          `protobuf:"varint,2,opt,name=Uid,proto3" json:"Uid,omitempty"`
}

func (x *GetArticleManagementListRequest) Reset() {
	*x = GetArticleManagementListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_article_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetArticleManagementListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleManagementListRequest) ProtoMessage() {}

func (x *GetArticleManagementListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleManagementListRequest.ProtoReflect.Descriptor instead.
func (*GetArticleManagementListRequest) Descriptor() ([]byte, []int) {
	return file_article_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetArticleManagementListRequest) GetPageInfo() *CommonPageInfo {
	if x != nil {
		return x.PageInfo
	}
	return nil
}

func (x *GetArticleManagementListRequest) GetUid() uint32 {
	if x != nil {
		return x.Uid
	}
	return 0
}

var File_article_service_proto protoreflect.FileDescriptor

var file_article_service_proto_rawDesc = []byte{
	0x0a, 0x15, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x22, 0x28, 0x0a, 0x12, 0x43,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x22, 0x39, 0x0a, 0x15, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x49,
	0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x55, 0x49, 0x44, 0x22, 0x52, 0x0a, 0x0e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x50, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x04, 0x50, 0x61, 0x67, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x53, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x4b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x13, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x78, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08,
	0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x22, 0xc8, 0x02, 0x0a, 0x20, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x43,
	0x6f, 0x76, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x76, 0x65,
	0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x1d, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x1d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72,
	0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c,
	0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a,
	0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12,
	0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x69,
	0x64, 0x22, 0xd8, 0x02, 0x0a, 0x20, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x02, 0x49, 0x44, 0x12, 0x14, 0x0a, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x12, 0x28, 0x0a, 0x0f,
	0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x43, 0x6f, 0x76, 0x65, 0x72, 0x55, 0x70, 0x6c, 0x6f,
	0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x44, 0x0a, 0x1d, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x06, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x05, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x2a,
	0x0a, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x44, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x10, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x44, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69,
	0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55, 0x69, 0x64, 0x22, 0x83, 0x01, 0x0a,
	0x19, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x44, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x44,
	0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x55,
	0x69, 0x64, 0x22, 0x73, 0x0a, 0x1f, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3e, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x03, 0x55, 0x69, 0x64, 0x32, 0xf6, 0x09, 0x0a, 0x0e, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x1a, 0x47, 0x65,
	0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x50, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x71, 0x0a, 0x20, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x55, 0x73, 0x65, 0x72, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x26, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6b, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2c,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x1c, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x25, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x66, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x25,
	0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x5a, 0x65, 0x72, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x71, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x42, 0x79, 0x49, 0x44, 0x12, 0x29, 0x2e,
	0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x41, 0x6e, 0x64, 0x55, 0x49,
	0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x7b, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x34, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63,
	0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12,
	0x7b, 0x0a, 0x19, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x68, 0x0a, 0x11,
	0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x42, 0x79, 0x49,
	0x44, 0x12, 0x29, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x49, 0x44, 0x41,
	0x6e, 0x64, 0x55, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x6d, 0x0a, 0x12, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x2d, 0x2e, 0x61,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x79, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x33, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x42, 0x2c, 0x5a, 0x2a, 0x65, 0x76, 0x6e, 0x5f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f,
	0x70, 0x6b, 0x67, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_article_service_proto_rawDescOnce sync.Once
	file_article_service_proto_rawDescData = file_article_service_proto_rawDesc
)

func file_article_service_proto_rawDescGZIP() []byte {
	file_article_service_proto_rawDescOnce.Do(func() {
		file_article_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_article_service_proto_rawDescData)
	})
	return file_article_service_proto_rawDescData
}

var file_article_service_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_article_service_proto_goTypes = []interface{}{
	(*CommonDataResponse)(nil),               // 0: article.service.v1.CommonDataResponse
	(*CommonIDRequest)(nil),                  // 1: article.service.v1.CommonIDRequest
	(*CommonIDAndUIDRequest)(nil),            // 2: article.service.v1.CommonIDAndUIDRequest
	(*CommonPageInfo)(nil),                   // 3: article.service.v1.CommonPageInfo
	(*CommonZeroRequest)(nil),                // 4: article.service.v1.CommonZeroRequest
	(*GetArticleCommentRequest)(nil),         // 5: article.service.v1.GetArticleCommentRequest
	(*CreateArticleContributionRequest)(nil), // 6: article.service.v1.CreateArticleContributionRequest
	(*UpdateArticleContributionRequest)(nil), // 7: article.service.v1.UpdateArticleContributionRequest
	(*ArticlePostCommentRequest)(nil),        // 8: article.service.v1.ArticlePostCommentRequest
	(*GetArticleManagementListRequest)(nil),  // 9: article.service.v1.GetArticleManagementListRequest
}
var file_article_service_proto_depIdxs = []int32{
	3,  // 0: article.service.v1.GetArticleCommentRequest.PageInfo:type_name -> article.service.v1.CommonPageInfo
	3,  // 1: article.service.v1.GetArticleManagementListRequest.PageInfo:type_name -> article.service.v1.CommonPageInfo
	3,  // 2: article.service.v1.ArticleService.GetArticleContributionList:input_type -> article.service.v1.CommonPageInfo
	1,  // 3: article.service.v1.ArticleService.GetArticleContributionListByUser:input_type -> article.service.v1.CommonIDRequest
	5,  // 4: article.service.v1.ArticleService.GetArticleComment:input_type -> article.service.v1.GetArticleCommentRequest
	4,  // 5: article.service.v1.ArticleService.GetArticleClassificationList:input_type -> article.service.v1.CommonZeroRequest
	4,  // 6: article.service.v1.ArticleService.GetArticleTotalInfo:input_type -> article.service.v1.CommonZeroRequest
	2,  // 7: article.service.v1.ArticleService.GetArticleContributionByID:input_type -> article.service.v1.CommonIDAndUIDRequest
	6,  // 8: article.service.v1.ArticleService.CreateArticleContribution:input_type -> article.service.v1.CreateArticleContributionRequest
	7,  // 9: article.service.v1.ArticleService.UpdateArticleContribution:input_type -> article.service.v1.UpdateArticleContributionRequest
	2,  // 10: article.service.v1.ArticleService.DeleteArticleByID:input_type -> article.service.v1.CommonIDAndUIDRequest
	8,  // 11: article.service.v1.ArticleService.ArticlePostComment:input_type -> article.service.v1.ArticlePostCommentRequest
	9,  // 12: article.service.v1.ArticleService.GetArticleManagementList:input_type -> article.service.v1.GetArticleManagementListRequest
	0,  // 13: article.service.v1.ArticleService.GetArticleContributionList:output_type -> article.service.v1.CommonDataResponse
	0,  // 14: article.service.v1.ArticleService.GetArticleContributionListByUser:output_type -> article.service.v1.CommonDataResponse
	0,  // 15: article.service.v1.ArticleService.GetArticleComment:output_type -> article.service.v1.CommonDataResponse
	0,  // 16: article.service.v1.ArticleService.GetArticleClassificationList:output_type -> article.service.v1.CommonDataResponse
	0,  // 17: article.service.v1.ArticleService.GetArticleTotalInfo:output_type -> article.service.v1.CommonDataResponse
	0,  // 18: article.service.v1.ArticleService.GetArticleContributionByID:output_type -> article.service.v1.CommonDataResponse
	0,  // 19: article.service.v1.ArticleService.CreateArticleContribution:output_type -> article.service.v1.CommonDataResponse
	0,  // 20: article.service.v1.ArticleService.UpdateArticleContribution:output_type -> article.service.v1.CommonDataResponse
	0,  // 21: article.service.v1.ArticleService.DeleteArticleByID:output_type -> article.service.v1.CommonDataResponse
	0,  // 22: article.service.v1.ArticleService.ArticlePostComment:output_type -> article.service.v1.CommonDataResponse
	0,  // 23: article.service.v1.ArticleService.GetArticleManagementList:output_type -> article.service.v1.CommonDataResponse
	13, // [13:24] is the sub-list for method output_type
	2,  // [2:13] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_article_service_proto_init() }
func file_article_service_proto_init() {
	if File_article_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_article_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonIDAndUIDRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonPageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonZeroRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateArticleContributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateArticleContributionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ArticlePostCommentRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_article_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetArticleManagementListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_article_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_article_service_proto_goTypes,
		DependencyIndexes: file_article_service_proto_depIdxs,
		MessageInfos:      file_article_service_proto_msgTypes,
	}.Build()
	File_article_service_proto = out.File
	file_article_service_proto_rawDesc = nil
	file_article_service_proto_goTypes = nil
	file_article_service_proto_depIdxs = nil
}
